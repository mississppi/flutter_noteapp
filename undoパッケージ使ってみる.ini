undoパッケージ使ってみる
どうやらchangeとSimpleStackがあるらしい
どっちもやるか。何をどうしたらいいのか
まずSimpleStackが必要
このコントローラーで、.undo() .redo()が使えるぽい？

state初期化で、SImpleStackを初期化する

onPressed: !_controller.canUndo
                                ? null
                                : () {
                                    if (mounted)
                                      setState(() {
                                        _controller.undo();
                                        String vall = _controller.state;
                                        contentController.text = vall;
                                      });
                   
                

空の時動作させないようにする
isNotEmpty

limitの検証
limit: 10
とかでできた

stateをhashで渡す
-> done

受け取る
-> done

postidの判定が難しい
-> ここでundoして渡してくるので、
undoして、idが一致したら直近の
ものを戻す。
ただundoするのでstateが戻っちゃう
仮に複数id入ってたらどうしよう
stateない検索




postidを判定する


まずundoをkeyで
widgetをわける

 onPressed: !_controller.canUndo
                                ? null
                                : () {
                                    if (mounted)
                                      setState(() {
                                        _controller.undo();
                                        String val = _controller.state;
                                        if (val.isNotEmpty) {
                                          contentController.text = val;
                                        }
                                      });
                         
                         
post_idごとに
もってないとだめか。。

1: hog
1: hoge
1: hogeg
2: gihgie

vscodeをみてみる
1文字ずつundoされない
なぜだ...
単語ごとでundoしてる。。？

テキストバッファとは
データ保持、管理する部分のこと

プリミティブとは
バッファに対する処理のこと
どうやら3章、挿入、削除がそれを指すらしい

これらの処理は位置が必要らしい、
絶対位置か相対位置でやるらしい

単純に文字列を1次元に並べたような
とにかく遅いらしい.vector

Listと行番号を使った構造は、
vectorと別の速さ、遅さがある

更新処理で行番号キャッシュ処理を使うと
めさはやし

gap_bufferという構造




なんかvector構造がいい感じらしい。単純に配列はあかん

1. onchanedでそのままだとだめ。
半角スペースをフック
if半角スペースが来た場合のみ



結局なんの言語でも、
このpost_idの仕組みを
考えないとダメじゃね
